package game;

import java.io.DataInputStream;
import java.io.Serializable;

import game.Player.Direction;

<<<<<<< .working
public abstract class Characters implements Serializable {

	/**
	 *
	 */
	private static final long serialVersionUID = 1L;
	private int x, y;
=======
public abstract class Characters extends GameObject{
	protected Tile pos;
>>>>>>> .merge-right.r91

	public Characters(String image, String name, boolean isMoveable,Tile t) {
		super(image, name, isMoveable);
		pos = t;
	}
	public abstract void move(Direction dir);

	public boolean collision (Characters other){
		/*if(this.posX < other.posX+Tile.tileSize && this.posX >= other.posX){
			if(this.posY < other.posY+Tile.tileSize && this.posY >= other.posY){
			return true;
			}
		}
		if(other.posX < this.posX+Tile.tileSize && other.posX >= this.posX){
			if(other.posY < this.posY+Tile.tileSize && other.posY >= this.posY){
			return true;
			}
		}*/
		return false;
	}

		public Tile getPos(){
			return pos;
		}
		
		public void setPos(Tile t){
			pos = t;
		}
		
	/*public float getX(){
		return pos.getRow();
	}

<<<<<<< .working
	public void moveRight() {
		if (x < World.mapSize-1){
			x++;
		}
	}

	public void moveLeft() {
		if (x > 0){
			x--;
		}
	}

	public void moveUp() {
		if (y > 0){
			y--;
		}
	}

	public void moveDown() {
		if (y < World.mapSize-1){
			y++;
		}
	}
=======
	public float getY(){
		return pos.getCol();
	}*/
>>>>>>> .merge-right.r91
}
