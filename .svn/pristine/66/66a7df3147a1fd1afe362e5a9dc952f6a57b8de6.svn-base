package game;

import gui.GameCanvas;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import util.ImageLibrary;

public class Player extends Characters{
	private ArrayList<Object> inventory = new ArrayList<Object>();
	public Direction direction;
	public double transition;
	public String[] images;
	private int i = 0;

	public static enum Direction {LEFT, RIGHT, UP, DOWN;}

	public Player(String[] image, String name, boolean isMoveable, int x, int y) {
		super(image[0], name, isMoveable);
		direction = Direction.LEFT;
		posX = x;
		posY = y;
		transition = 0.0;
		images = image;
	}


	public ArrayList<Object> getInventory(){
		return inventory;
	}

	/** Will begin the player movement to another tile.
	 * @param dir the Direction the player is wanting to move in
	 */
	@Override
	public void move(Direction dir) {
		if(transition != 0.0) return;
		direction = dir;
		transition = 0.25;
	}

	public void interact(){
		//interact with items derp derp derp
	}
	
	/** Updates the players current transition between tiles.
	 */
	public void clockTick(){
		if(transition == 0.0) return; // the player is not currently moving
		if(direction == Direction.LEFT){
			posX -=Tile.tileSize/4.0;
		}else if(direction == Direction.RIGHT){
			posX +=Tile.tileSize/4.0;
		}else if(direction == Direction.UP){
			posY -= Tile.tileSize/4.0;
		}else if(direction == Direction.DOWN){
			posY += Tile.tileSize/4.0;
		}
		if(transition == 1.0){
			transition = 0.0;
			return;
		}
		transition+=0.25; // how many steps there are
	}
	
	public void draw(Graphics g){		
		
		// while there is no sprites
		if(images == null){
		g.setColor(Color.GREEN);
		g.fillOval((int)posX,(int)posY-i,Tile.tileSize,Tile.tileSize+i-1);
		if(i ==0)
			i=3;
		else
			i=0;
		}
		else{
		BufferedImage img = ImageLibrary.get(images[0]);  // this will need to be direction specific
		g.drawImage(img,(int)posX,(int)posY,null);
		//i++;
		if(i >= images.length){
			i=0;
		}
		}
	}
	
	
}
